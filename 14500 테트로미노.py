import sys
input = sys.stdin.readline

#입력
N, M = map(int, input().split())
tetromino = []
for _ in range(N):
    tetromino.append(list(map(int, input().split())))

direction = [
    # ㅡ
    [(0, 0), (0, 1), (0, 2), (0, 3)], [(0, 0), (1, 0), (2, 0), (3, 0)],
    # ㅁ
    [(0, 0), (0, 1), (1, 0), (1, 1)],
    # L
    [(0, 0), (0, 1), (0, 2), (1, 0)], [(0, 0), (0, 1), (0, 2), (-1, 2)],
    [(0, 0), (1, 0), (1, 1), (1, 2)], [(0, 0), (0, 1), (0, 2), (1, 2)],
    [(0, 0), (1, 0), (2, 0), (2, 1)], [(0, 0), (1, 0), (2, 0), (2, -1)],
    [(0, 0), (0, 1), (1, 0), (2, 0)], [(0, 0), (0, 1), (1, 1), (2, 1)],
    # ㅗ
    [(0, 0), (0, 1), (0, 2), (1, 1)], [(0, 0), (0, 1), (0, 2), (-1, 1)],
    [(0, 0), (1, 0), (1, 1), (2, 0)], [(0, 0), (1, 0), (2, 0), (1, -1)],
    # ㄹ
    [(0, 0), (1, 0), (1, -1), (2, -1)], [(0, 0), (1, 0), (1, 1), (2, 1)],
    [(0, 0), (0, 1), (-1, 1), (-1, 2)], [(0, 0), (0, 1), (1, 1), (1, 2)]
]
res = 0
for x in range(N):
    for y in range(M):
        for direct in direction:
            sum = 0
            for dx, dy in direct:
                nx, ny = x+dx, y+dy
                if 0 <= nx < N and 0 <= ny < M:
                    sum += tetromino[nx][ny]
            res = max(sum, res)
print(res)
